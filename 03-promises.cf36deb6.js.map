{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,SAAUF,SAASC,cAAc,WAGnCH,EAAKC,OAAOI,iBAAiB,UAM7B,SAAuBC,EAAOC,EAAUC,GACtCF,EAAMG,iBACgBC,KAAKC,SAAW,GAGpCb,EAAAc,OAAOC,QAAQ,qBAAoCC,OAAfP,EAAS,QAAYO,OAANN,EAAM,OAGzDV,EAAAc,OAAOG,QAAQ,oBAAmCD,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IAZ9CR,EAAKC,OAAOe,SAASC,MAAMC,MAC5BlB,EAAKC,OAAOe,SAASG,KAAKD,MACxBlB,EAAKC,OAAOe,SAASI,OAAOF,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  buttonEl: document.querySelector('button'),\n};\n\nrefs.formEl.addEventListener('submit', createPromise);\n\nconst delay = refs.formEl.elements.delay.value;\nconst step = refs.formEl.elements.step.value;\nconst amount = refs.formEl.elements.amount.value;\n\nfunction createPromise(event, position, delay) {\n  event.preventDefault();\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n    Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n    // Reject\n    Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n  }\n}\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","formEl","document","querySelector","buttonEl","addEventListener","event","position","delay1","preventDefault","Math","random","Notify","success","concat","failure","elements","delay","value","step","amount"],"version":3,"file":"03-promises.cf36deb6.js.map"}